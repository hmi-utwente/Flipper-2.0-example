<behaviourtemplates>
    <is name="example">
        {
            "init" : {},
            "input" : {
                "speech" : ""
            },
            "core" : {
                "uIntent" : "",
                "aIntent" : ""
            }
            "output" : {
                "speech" : "",
            }
        }
    </is>

    <javascript>
        function getUserIntent(String text){
            if(text === "hello"){
                return "greeting";
            }
            else if(text == "bye"){
                return "goodbye";
            }
            else{
                return "unknown";
            }
        }

        function getAgentIntent(String intent){
            if(text === "greeting"){
                return "greeting";
            }
            else if(text == "goodbye"){
                return "goodbye";
            }
            else{
                return "unknown";
            }
        }

        function setAgentSpeech(String intent){
            if(text === "hello"){
                return "Hello";
            }
            else if(text == "bye"){
                return "Bye";
            }
            else{
                return "I don't know";
            }
        }


    </javascript>

    <!-- Initialize the modules -->
    <template id="initializeModules" name="initializeModules">
        <preconditions>
            <condition>is.example.init === "{}"</condition>
            <condition>helpPrint("initializing")</condition>
        </preconditions>
        <initeffects>
            <method name="init" is="is.example.init.sphinx">
                <object persistent="sphinx" class="hmi.flipper2.exampleProject.input">
                    <constructors/>
                </object>
            </method>
            <method name="init" is="is.example.init.marytts">
                <object persistent="marytts" class="hmi.flipper2.exampleProject.output">
                    <constructors/>
                </object>
            </method>
        </initeffects>
    </template>

    <!-- Check for speech -->
    <template id="greetUser">
        <preconditions>
            <condition>is.dialog.agent.intent === "greetUser"</condition>
            <condition>helpPrint("User: " + is.dialog.user)</condition>
        </preconditions>
        <effects>
            <assign is="is.dialog.agent.utterance">"Hello again, "+ is.dialog.user.name</assign>
            <assign is="is.dialog.agent.ready">true</assign>
            <assign is="is.dialog.agent.intent">""</assign>
            <method name="setName">
                <object persistent="ChatModule" class="nl.utwente.hmi.coffeebot.dialog.GUI"/>
                <arguments>
                    <value class="String" is="is.dialog.user.name"/>
                </arguments>
            </method>
        </effects>
    </template>

    <!-- Set user intent when speech -->
    <template id="greetUser">
        <preconditions>
            <condition>is.dialog.agent.intent === "greetUser"</condition>
            <condition>helpPrint("User: " + is.dialog.user)</condition>
        </preconditions>
        <effects>
            <assign is="is.dialog.agent.utterance">"Hello again, "+ is.dialog.user.name</assign>
            <assign is="is.dialog.agent.ready">true</assign>
            <assign is="is.dialog.agent.intent">""</assign>
            <method name="setName">
                <object persistent="ChatModule" class="nl.utwente.hmi.coffeebot.dialog.GUI"/>
                <arguments>
                    <value class="String" is="is.dialog.user.name"/>
                </arguments>
            </method>
        </effects>
    </template>

    <!-- Set agent intent based on user intent -->
    <template id="greetUser">
        <preconditions>
            <condition>is.dialog.agent.intent === "greetUser"</condition>
            <condition>helpPrint("User: " + is.dialog.user)</condition>
        </preconditions>
        <effects>
            <assign is="is.dialog.agent.utterance">"Hello again, "+ is.dialog.user.name</assign>
            <assign is="is.dialog.agent.ready">true</assign>
            <assign is="is.dialog.agent.intent">""</assign>
            <method name="setName">
                <object persistent="ChatModule" class="nl.utwente.hmi.coffeebot.dialog.GUI"/>
                <arguments>
                    <value class="String" is="is.dialog.user.name"/>
                </arguments>
            </method>
        </effects>
    </template>

    <!-- Set agent speech based on agent intent -->
    <template id="greetUser">
        <preconditions>
            <condition>is.dialog.agent.intent === "greetUser"</condition>
            <condition>helpPrint("User: " + is.dialog.user)</condition>
        </preconditions>
        <effects>
            <assign is="is.dialog.agent.utterance">"Hello again, "+ is.dialog.user.name</assign>
            <assign is="is.dialog.agent.ready">true</assign>
            <assign is="is.dialog.agent.intent">""</assign>
            <method name="setName">
                <object persistent="ChatModule" class="nl.utwente.hmi.coffeebot.dialog.GUI"/>
                <arguments>
                    <value class="String" is="is.dialog.user.name"/>
                </arguments>
            </method>
        </effects>
    </template>

    <template id="greetUser">
        <preconditions>
            <condition>is.dialog.agent.intent === "greetUser"</condition>
            <condition>helpPrint("User: " + is.dialog.user)</condition>
        </preconditions>
        <effects>
            <assign is="is.dialog.agent.utterance">"Hello again, "+ is.dialog.user.name</assign>
            <assign is="is.dialog.agent.ready">true</assign>
            <assign is="is.dialog.agent.intent">""</assign>
            <method name="setName">
                <object persistent="ChatModule" class="nl.utwente.hmi.coffeebot.dialog.GUI"/>
                <arguments>
                    <value class="String" is="is.dialog.user.name"/>
                </arguments>
            </method>
        </effects>
    </template>

</behaviourtemplates>